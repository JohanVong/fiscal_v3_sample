//*
// @file
// @brief Структуры данных чека.
//
// Содержит описания типов, используемых при передаче чеков.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: ticket.proto

package kkm_proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation             *OperationTypeEnum              `protobuf:"varint,1,req,name=operation,enum=kkm.proto.OperationTypeEnum" json:"operation,omitempty"`
	DateTime              *DateTime                       `protobuf:"bytes,2,req,name=date_time,json=dateTime" json:"date_time,omitempty"`
	Operator              *TicketRequest_Operator         `protobuf:"bytes,3,req,name=operator" json:"operator,omitempty"`
	Domain                *TicketRequest_Domain           `protobuf:"bytes,4,req,name=domain" json:"domain,omitempty"`
	Items                 []*TicketRequest_Item           `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	Payments              []*TicketRequest_Payment        `protobuf:"bytes,6,rep,name=payments" json:"payments,omitempty"`
	Taxes                 []*TicketRequest_Tax            `protobuf:"bytes,7,rep,name=taxes" json:"taxes,omitempty"`
	Amounts               *TicketRequest_Amounts          `protobuf:"bytes,8,req,name=amounts" json:"amounts,omitempty"`
	ExtensionOptions      *TicketRequest_ExtensionOptions `protobuf:"bytes,9,opt,name=extension_options,json=extensionOptions" json:"extension_options,omitempty"`
	OfflineTicketNumber   *uint32                         `protobuf:"varint,10,opt,name=offline_ticket_number,json=offlineTicketNumber" json:"offline_ticket_number,omitempty"`
	PrintedDocumentNumber *string                         `protobuf:"bytes,11,opt,name=printed_document_number,json=printedDocumentNumber" json:"printed_document_number,omitempty"`
	PrintedTicket         *string                         `protobuf:"bytes,12,opt,name=printed_ticket,json=printedTicket" json:"printed_ticket,omitempty"` // ticket in one string, delimiter - \n
	/// @deprecated используйте ServiceRequest
	/// поле игнорируется ККМ сервером
	AdInfos       []*TicketAdInfo `protobuf:"bytes,13,rep,name=ad_infos,json=adInfos" json:"ad_infos,omitempty"`
	FrShiftNumber *uint32         `protobuf:"varint,14,opt,name=fr_shift_number,json=frShiftNumber" json:"fr_shift_number,omitempty"`
}

func (x *TicketRequest) Reset() {
	*x = TicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest) ProtoMessage() {}

func (x *TicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest.ProtoReflect.Descriptor instead.
func (*TicketRequest) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *TicketRequest) GetOperation() OperationTypeEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return OperationTypeEnum_OPERATION_BUY
}

func (x *TicketRequest) GetDateTime() *DateTime {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *TicketRequest) GetOperator() *TicketRequest_Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *TicketRequest) GetDomain() *TicketRequest_Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *TicketRequest) GetItems() []*TicketRequest_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TicketRequest) GetPayments() []*TicketRequest_Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *TicketRequest) GetTaxes() []*TicketRequest_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *TicketRequest) GetAmounts() *TicketRequest_Amounts {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *TicketRequest) GetExtensionOptions() *TicketRequest_ExtensionOptions {
	if x != nil {
		return x.ExtensionOptions
	}
	return nil
}

func (x *TicketRequest) GetOfflineTicketNumber() uint32 {
	if x != nil && x.OfflineTicketNumber != nil {
		return *x.OfflineTicketNumber
	}
	return 0
}

func (x *TicketRequest) GetPrintedDocumentNumber() string {
	if x != nil && x.PrintedDocumentNumber != nil {
		return *x.PrintedDocumentNumber
	}
	return ""
}

func (x *TicketRequest) GetPrintedTicket() string {
	if x != nil && x.PrintedTicket != nil {
		return *x.PrintedTicket
	}
	return ""
}

func (x *TicketRequest) GetAdInfos() []*TicketAdInfo {
	if x != nil {
		return x.AdInfos
	}
	return nil
}

func (x *TicketRequest) GetFrShiftNumber() uint32 {
	if x != nil && x.FrShiftNumber != nil {
		return *x.FrShiftNumber
	}
	return 0
}

type TicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketNumber *string `protobuf:"bytes,1,req,name=ticket_number,json=ticketNumber" json:"ticket_number,omitempty"`
	QrCode       []byte  `protobuf:"bytes,2,opt,name=qr_code,json=qrCode" json:"qr_code,omitempty"`
}

func (x *TicketResponse) Reset() {
	*x = TicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketResponse) ProtoMessage() {}

func (x *TicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketResponse.ProtoReflect.Descriptor instead.
func (*TicketResponse) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *TicketResponse) GetTicketNumber() string {
	if x != nil && x.TicketNumber != nil {
		return *x.TicketNumber
	}
	return ""
}

func (x *TicketResponse) GetQrCode() []byte {
	if x != nil {
		return x.QrCode
	}
	return nil
}

type TicketRequest_Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxType      *uint32 `protobuf:"varint,1,req,name=tax_type,json=taxType" json:"tax_type,omitempty"`
	TaxationType *uint32 `protobuf:"varint,2,req,name=taxation_type,json=taxationType" json:"taxation_type,omitempty"`
	Percent      *uint32 `protobuf:"varint,3,req,name=percent" json:"percent,omitempty"`
	Sum          *Money  `protobuf:"bytes,4,req,name=sum" json:"sum,omitempty"`
	IsInTotalSum *bool   `protobuf:"varint,5,req,name=is_in_total_sum,json=isInTotalSum" json:"is_in_total_sum,omitempty"`
}

func (x *TicketRequest_Tax) Reset() {
	*x = TicketRequest_Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Tax) ProtoMessage() {}

func (x *TicketRequest_Tax) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Tax.ProtoReflect.Descriptor instead.
func (*TicketRequest_Tax) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TicketRequest_Tax) GetTaxType() uint32 {
	if x != nil && x.TaxType != nil {
		return *x.TaxType
	}
	return 0
}

func (x *TicketRequest_Tax) GetTaxationType() uint32 {
	if x != nil && x.TaxationType != nil {
		return *x.TaxationType
	}
	return 0
}

func (x *TicketRequest_Tax) GetPercent() uint32 {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return 0
}

func (x *TicketRequest_Tax) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *TicketRequest_Tax) GetIsInTotalSum() bool {
	if x != nil && x.IsInTotalSum != nil {
		return *x.IsInTotalSum
	}
	return false
}

// describes markups discounts, storno
type TicketRequest_Modifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Sum   *Money               `protobuf:"bytes,2,req,name=sum" json:"sum,omitempty"`
	Taxes []*TicketRequest_Tax `protobuf:"bytes,3,rep,name=taxes" json:"taxes,omitempty"`
}

func (x *TicketRequest_Modifier) Reset() {
	*x = TicketRequest_Modifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Modifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Modifier) ProtoMessage() {}

func (x *TicketRequest_Modifier) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Modifier.ProtoReflect.Descriptor instead.
func (*TicketRequest_Modifier) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TicketRequest_Modifier) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TicketRequest_Modifier) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *TicketRequest_Modifier) GetTaxes() []*TicketRequest_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

type TicketRequest_Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *uint32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *TicketRequest_Operator) Reset() {
	*x = TicketRequest_Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Operator) ProtoMessage() {}

func (x *TicketRequest_Operator) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Operator.ProtoReflect.Descriptor instead.
func (*TicketRequest_Operator) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 2}
}

func (x *TicketRequest_Operator) GetCode() uint32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *TicketRequest_Operator) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// describes one position in ticket
type TicketRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *ItemTypeEnum                       `protobuf:"varint,1,req,name=type,enum=kkm.proto.ItemTypeEnum" json:"type,omitempty"`
	Commodity       *TicketRequest_Item_Commodity       `protobuf:"bytes,2,opt,name=commodity" json:"commodity,omitempty"`                                    // required if type == ITEM_TYPE_COMMODITY
	StornoCommodity *TicketRequest_Item_StornoCommodity `protobuf:"bytes,3,opt,name=storno_commodity,json=stornoCommodity" json:"storno_commodity,omitempty"` // required if type == ITEM_TYPE_STORNO_COMMODITY
	Markup          *TicketRequest_Modifier             `protobuf:"bytes,4,opt,name=markup" json:"markup,omitempty"`                                          // required if type == ITEM_TYPE_MARKUP
	StornoMarkup    *TicketRequest_Modifier             `protobuf:"bytes,5,opt,name=storno_markup,json=stornoMarkup" json:"storno_markup,omitempty"`          // required if type == ITEM_TYPE_STORNO_MARKUP
	Discount        *TicketRequest_Modifier             `protobuf:"bytes,6,opt,name=discount" json:"discount,omitempty"`                                      // required if type == ITEM_TYPE_DISCOUNT
	StornoDiscount  *TicketRequest_Modifier             `protobuf:"bytes,7,opt,name=storno_discount,json=stornoDiscount" json:"storno_discount,omitempty"`    // required if type == ITEM_TYPE_STORNO_DISCOUNT
}

func (x *TicketRequest_Item) Reset() {
	*x = TicketRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Item) ProtoMessage() {}

func (x *TicketRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Item.ProtoReflect.Descriptor instead.
func (*TicketRequest_Item) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 3}
}

func (x *TicketRequest_Item) GetType() ItemTypeEnum {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ItemTypeEnum_ITEM_TYPE_COMMODITY
}

func (x *TicketRequest_Item) GetCommodity() *TicketRequest_Item_Commodity {
	if x != nil {
		return x.Commodity
	}
	return nil
}

func (x *TicketRequest_Item) GetStornoCommodity() *TicketRequest_Item_StornoCommodity {
	if x != nil {
		return x.StornoCommodity
	}
	return nil
}

func (x *TicketRequest_Item) GetMarkup() *TicketRequest_Modifier {
	if x != nil {
		return x.Markup
	}
	return nil
}

func (x *TicketRequest_Item) GetStornoMarkup() *TicketRequest_Modifier {
	if x != nil {
		return x.StornoMarkup
	}
	return nil
}

func (x *TicketRequest_Item) GetDiscount() *TicketRequest_Modifier {
	if x != nil {
		return x.Discount
	}
	return nil
}

func (x *TicketRequest_Item) GetStornoDiscount() *TicketRequest_Modifier {
	if x != nil {
		return x.StornoDiscount
	}
	return nil
}

type TicketRequest_Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *DomainTypeEnum                `protobuf:"varint,1,req,name=type,enum=kkm.proto.DomainTypeEnum" json:"type,omitempty"`
	Services *TicketRequest_Domain_Services `protobuf:"bytes,2,opt,name=services" json:"services,omitempty"`
	Gasoil   *TicketRequest_Domain_GasOil   `protobuf:"bytes,3,opt,name=gasoil" json:"gasoil,omitempty"`
	Taxi     *TicketRequest_Domain_Taxi     `protobuf:"bytes,4,opt,name=taxi" json:"taxi,omitempty"`
	Parking  *TicketRequest_Domain_Parking  `protobuf:"bytes,5,opt,name=parking" json:"parking,omitempty"`
}

func (x *TicketRequest_Domain) Reset() {
	*x = TicketRequest_Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Domain) ProtoMessage() {}

func (x *TicketRequest_Domain) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Domain.ProtoReflect.Descriptor instead.
func (*TicketRequest_Domain) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 4}
}

func (x *TicketRequest_Domain) GetType() DomainTypeEnum {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return DomainTypeEnum_DOMAIN_TRADING
}

func (x *TicketRequest_Domain) GetServices() *TicketRequest_Domain_Services {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *TicketRequest_Domain) GetGasoil() *TicketRequest_Domain_GasOil {
	if x != nil {
		return x.Gasoil
	}
	return nil
}

func (x *TicketRequest_Domain) GetTaxi() *TicketRequest_Domain_Taxi {
	if x != nil {
		return x.Taxi
	}
	return nil
}

func (x *TicketRequest_Domain) GetParking() *TicketRequest_Domain_Parking {
	if x != nil {
		return x.Parking
	}
	return nil
}

type TicketRequest_ExtensionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerEmail *string `protobuf:"bytes,1,opt,name=customer_email,json=customerEmail" json:"customer_email,omitempty"`
	CustomerPhone *string `protobuf:"bytes,2,opt,name=customer_phone,json=customerPhone" json:"customer_phone,omitempty"`
	CustomerIinOrBin *string `protobuf:"bytes,3,opt,name=customer_iin_or_bin,json=customerIinOrBin" json:"customer_iin_or_bin,omitempty"`
}

func (x *TicketRequest_ExtensionOptions) Reset() {
	*x = TicketRequest_ExtensionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_ExtensionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_ExtensionOptions) ProtoMessage() {}

func (x *TicketRequest_ExtensionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_ExtensionOptions.ProtoReflect.Descriptor instead.
func (*TicketRequest_ExtensionOptions) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 5}
}

func (x *TicketRequest_ExtensionOptions) GetCustomerEmail() string {
	if x != nil && x.CustomerEmail != nil {
		return *x.CustomerEmail
	}
	return ""
}

func (x *TicketRequest_ExtensionOptions) GetCustomerPhone() string {
	if x != nil && x.CustomerPhone != nil {
		return *x.CustomerPhone
	}
	return ""
}

func (x *TicketRequest_ExtensionOptions) GetCustomerIinOrBin() string {
	if x != nil && x.CustomerIinOrBin != nil {
		return *x.CustomerIinOrBin
	}
	return ""
}

type TicketRequest_Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *PaymentTypeEnum `protobuf:"varint,1,req,name=type,enum=kkm.proto.PaymentTypeEnum" json:"type,omitempty"`
	Sum  *Money           `protobuf:"bytes,2,req,name=sum" json:"sum,omitempty"`
}

func (x *TicketRequest_Payment) Reset() {
	*x = TicketRequest_Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Payment) ProtoMessage() {}

func (x *TicketRequest_Payment) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Payment.ProtoReflect.Descriptor instead.
func (*TicketRequest_Payment) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 6}
}

func (x *TicketRequest_Payment) GetType() PaymentTypeEnum {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PaymentTypeEnum_PAYMENT_CASH
}

func (x *TicketRequest_Payment) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

type TicketRequest_Amounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    *Money                  `protobuf:"bytes,1,req,name=total" json:"total,omitempty"`
	Taken    *Money                  `protobuf:"bytes,2,opt,name=taken" json:"taken,omitempty"`
	Change   *Money                  `protobuf:"bytes,3,opt,name=change" json:"change,omitempty"`
	Markup   *TicketRequest_Modifier `protobuf:"bytes,4,opt,name=markup" json:"markup,omitempty"`     // if set discount should't be set
	Discount *TicketRequest_Modifier `protobuf:"bytes,5,opt,name=discount" json:"discount,omitempty"` // if set markup should't be set
}

func (x *TicketRequest_Amounts) Reset() {
	*x = TicketRequest_Amounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Amounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Amounts) ProtoMessage() {}

func (x *TicketRequest_Amounts) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Amounts.ProtoReflect.Descriptor instead.
func (*TicketRequest_Amounts) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 7}
}

func (x *TicketRequest_Amounts) GetTotal() *Money {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *TicketRequest_Amounts) GetTaken() *Money {
	if x != nil {
		return x.Taken
	}
	return nil
}

func (x *TicketRequest_Amounts) GetChange() *Money {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *TicketRequest_Amounts) GetMarkup() *TicketRequest_Modifier {
	if x != nil {
		return x.Markup
	}
	return nil
}

func (x *TicketRequest_Amounts) GetDiscount() *TicketRequest_Modifier {
	if x != nil {
		return x.Discount
	}
	return nil
}

type TicketRequest_Item_Commodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        *uint32              `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Name        *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SectionCode *string              `protobuf:"bytes,3,req,name=section_code,json=sectionCode" json:"section_code,omitempty"`
	Quantity    *uint32              `protobuf:"varint,4,req,name=quantity" json:"quantity,omitempty"`
	Price       *Money               `protobuf:"bytes,5,req,name=price" json:"price,omitempty"`
	Sum         *Money               `protobuf:"bytes,6,req,name=sum" json:"sum,omitempty"`
	Taxes       []*TicketRequest_Tax `protobuf:"bytes,7,rep,name=taxes" json:"taxes,omitempty"`
	ExciseStamp *string              `protobuf:"bytes,8,opt,name=excise_stamp,json=exciseStamp" json:"excise_stamp,omitempty"`
}

func (x *TicketRequest_Item_Commodity) Reset() {
	*x = TicketRequest_Item_Commodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Item_Commodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Item_Commodity) ProtoMessage() {}

func (x *TicketRequest_Item_Commodity) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Item_Commodity.ProtoReflect.Descriptor instead.
func (*TicketRequest_Item_Commodity) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *TicketRequest_Item_Commodity) GetCode() uint32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *TicketRequest_Item_Commodity) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TicketRequest_Item_Commodity) GetSectionCode() string {
	if x != nil && x.SectionCode != nil {
		return *x.SectionCode
	}
	return ""
}

func (x *TicketRequest_Item_Commodity) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *TicketRequest_Item_Commodity) GetPrice() *Money {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TicketRequest_Item_Commodity) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *TicketRequest_Item_Commodity) GetTaxes() []*TicketRequest_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *TicketRequest_Item_Commodity) GetExciseStamp() string {
	if x != nil && x.ExciseStamp != nil {
		return *x.ExciseStamp
	}
	return ""
}

type TicketRequest_Item_StornoCommodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SectionCode *string              `protobuf:"bytes,2,req,name=section_code,json=sectionCode" json:"section_code,omitempty"`
	Quantity    *uint32              `protobuf:"varint,3,req,name=quantity" json:"quantity,omitempty"`
	Price       *Money               `protobuf:"bytes,4,req,name=price" json:"price,omitempty"`
	Sum         *Money               `protobuf:"bytes,5,req,name=sum" json:"sum,omitempty"`
	Taxes       []*TicketRequest_Tax `protobuf:"bytes,6,rep,name=taxes" json:"taxes,omitempty"`
	ExciseStamp *string              `protobuf:"bytes,8,opt,name=excise_stamp,json=exciseStamp" json:"excise_stamp,omitempty"`
}

func (x *TicketRequest_Item_StornoCommodity) Reset() {
	*x = TicketRequest_Item_StornoCommodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Item_StornoCommodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Item_StornoCommodity) ProtoMessage() {}

func (x *TicketRequest_Item_StornoCommodity) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Item_StornoCommodity.ProtoReflect.Descriptor instead.
func (*TicketRequest_Item_StornoCommodity) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *TicketRequest_Item_StornoCommodity) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TicketRequest_Item_StornoCommodity) GetSectionCode() string {
	if x != nil && x.SectionCode != nil {
		return *x.SectionCode
	}
	return ""
}

func (x *TicketRequest_Item_StornoCommodity) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *TicketRequest_Item_StornoCommodity) GetPrice() *Money {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TicketRequest_Item_StornoCommodity) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *TicketRequest_Item_StornoCommodity) GetTaxes() []*TicketRequest_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *TicketRequest_Item_StornoCommodity) GetExciseStamp() string {
	if x != nil && x.ExciseStamp != nil {
		return *x.ExciseStamp
	}
	return ""
}

//*
// @brief Сфера оказания услуг, отели и рестораны.
//
// На текущий момент не используется.
type TicketRequest_Domain_Services struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber *string `protobuf:"bytes,1,req,name=account_number,json=accountNumber" json:"account_number,omitempty"`
}

func (x *TicketRequest_Domain_Services) Reset() {
	*x = TicketRequest_Domain_Services{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Domain_Services) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Domain_Services) ProtoMessage() {}

func (x *TicketRequest_Domain_Services) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Domain_Services.ProtoReflect.Descriptor instead.
func (*TicketRequest_Domain_Services) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *TicketRequest_Domain_Services) GetAccountNumber() string {
	if x != nil && x.AccountNumber != nil {
		return *x.AccountNumber
	}
	return ""
}

//*
// @brief Сфера торговли нефтепродуктами.
//
// На текущий момент не используется.
type TicketRequest_Domain_GasOil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrectionNumber *string `protobuf:"bytes,1,opt,name=correction_number,json=correctionNumber" json:"correction_number,omitempty"`
	CorrectionSum    *Money  `protobuf:"bytes,2,opt,name=correction_sum,json=correctionSum" json:"correction_sum,omitempty"`
	CardNumber       *string `protobuf:"bytes,3,opt,name=card_number,json=cardNumber" json:"card_number,omitempty"`
}

func (x *TicketRequest_Domain_GasOil) Reset() {
	*x = TicketRequest_Domain_GasOil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Domain_GasOil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Domain_GasOil) ProtoMessage() {}

func (x *TicketRequest_Domain_GasOil) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Domain_GasOil.ProtoReflect.Descriptor instead.
func (*TicketRequest_Domain_GasOil) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 4, 1}
}

func (x *TicketRequest_Domain_GasOil) GetCorrectionNumber() string {
	if x != nil && x.CorrectionNumber != nil {
		return *x.CorrectionNumber
	}
	return ""
}

func (x *TicketRequest_Domain_GasOil) GetCorrectionSum() *Money {
	if x != nil {
		return x.CorrectionSum
	}
	return nil
}

func (x *TicketRequest_Domain_GasOil) GetCardNumber() string {
	if x != nil && x.CardNumber != nil {
		return *x.CardNumber
	}
	return ""
}

//*
// @brief Такси.
//
// На текущий момент не используется.
type TicketRequest_Domain_Taxi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarNumber  *string `protobuf:"bytes,1,req,name=car_number,json=carNumber" json:"car_number,omitempty"`
	IsOrder    *bool   `protobuf:"varint,2,req,name=is_order,json=isOrder" json:"is_order,omitempty"`
	CurrentFee *Money  `protobuf:"bytes,3,req,name=current_fee,json=currentFee" json:"current_fee,omitempty"`
}

func (x *TicketRequest_Domain_Taxi) Reset() {
	*x = TicketRequest_Domain_Taxi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Domain_Taxi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Domain_Taxi) ProtoMessage() {}

func (x *TicketRequest_Domain_Taxi) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Domain_Taxi.ProtoReflect.Descriptor instead.
func (*TicketRequest_Domain_Taxi) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 4, 2}
}

func (x *TicketRequest_Domain_Taxi) GetCarNumber() string {
	if x != nil && x.CarNumber != nil {
		return *x.CarNumber
	}
	return ""
}

func (x *TicketRequest_Domain_Taxi) GetIsOrder() bool {
	if x != nil && x.IsOrder != nil {
		return *x.IsOrder
	}
	return false
}

func (x *TicketRequest_Domain_Taxi) GetCurrentFee() *Money {
	if x != nil {
		return x.CurrentFee
	}
	return nil
}

//*
// @brief Парковки.
//
// На текущий момент не используется.
type TicketRequest_Domain_Parking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime *DateTime `protobuf:"bytes,1,req,name=begin_time,json=beginTime" json:"begin_time,omitempty"`
	EndTime   *DateTime `protobuf:"bytes,2,req,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (x *TicketRequest_Domain_Parking) Reset() {
	*x = TicketRequest_Domain_Parking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticket_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest_Domain_Parking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest_Domain_Parking) ProtoMessage() {}

func (x *TicketRequest_Domain_Parking) ProtoReflect() protoreflect.Message {
	mi := &file_ticket_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest_Domain_Parking.ProtoReflect.Descriptor instead.
func (*TicketRequest_Domain_Parking) Descriptor() ([]byte, []int) {
	return file_ticket_proto_rawDescGZIP(), []int{0, 4, 3}
}

func (x *TicketRequest_Domain_Parking) GetBeginTime() *DateTime {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *TicketRequest_Domain_Parking) GetEndTime() *DateTime {
	if x != nil {
		return x.EndTime
	}
	return nil
}

var File_ticket_proto protoreflect.FileDescriptor

var file_ticket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x1a, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6b, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x3c, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78,
	0x65, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x56,
	0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x64, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x6b,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0xaa, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x78, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x61, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x07, 0x74, 0x61, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x78, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x0c, 0x74, 0x61, 0x78, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x75, 0x6d, 0x1a, 0x76, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x1a, 0x32, 0x0a, 0x08, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x84,
	0x08, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x10, 0x73,
	0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x12, 0x46, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x6e, 0x6f, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x3d, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6b, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x6e,
	0x6f, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x95, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x03, 0x73, 0x75, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61,
	0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x69,
	0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x63, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x87, 0x02, 0x0a, 0x0f,
	0x53, 0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x32,
	0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x69, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x69, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xe3, 0x05, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x44, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x6f, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x4f, 0x69, 0x6c, 0x52, 0x06, 0x67,
	0x61, 0x73, 0x6f, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x61, 0x78, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x61, 0x78, 0x69, 0x52, 0x04, 0x74, 0x61, 0x78, 0x69, 0x12,
	0x41, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x1a, 0x31, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x8f, 0x01, 0x0a, 0x06, 0x47, 0x61, 0x73, 0x4f, 0x69, 0x6c,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37, 0x0a,
	0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x73, 0x0a, 0x04, 0x54, 0x61, 0x78, 0x69, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x1a, 0x6d, 0x0a, 0x07,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6b,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x60, 0x0a, 0x10, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x1a, 0x5d, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a, 0xfd, 0x01, 0x0a,
	0x07, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x05, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x05, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x3d, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x0e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x02, 0x48, 0x01,
}

var (
	file_ticket_proto_rawDescOnce sync.Once
	file_ticket_proto_rawDescData = file_ticket_proto_rawDesc
)

func file_ticket_proto_rawDescGZIP() []byte {
	file_ticket_proto_rawDescOnce.Do(func() {
		file_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticket_proto_rawDescData)
	})
	return file_ticket_proto_rawDescData
}

var file_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ticket_proto_goTypes = []interface{}{
	(*TicketRequest)(nil),                      // 0: kkm.proto.TicketRequest
	(*TicketResponse)(nil),                     // 1: kkm.proto.TicketResponse
	(*TicketRequest_Tax)(nil),                  // 2: kkm.proto.TicketRequest.Tax
	(*TicketRequest_Modifier)(nil),             // 3: kkm.proto.TicketRequest.Modifier
	(*TicketRequest_Operator)(nil),             // 4: kkm.proto.TicketRequest.Operator
	(*TicketRequest_Item)(nil),                 // 5: kkm.proto.TicketRequest.Item
	(*TicketRequest_Domain)(nil),               // 6: kkm.proto.TicketRequest.Domain
	(*TicketRequest_ExtensionOptions)(nil),     // 7: kkm.proto.TicketRequest.ExtensionOptions
	(*TicketRequest_Payment)(nil),              // 8: kkm.proto.TicketRequest.Payment
	(*TicketRequest_Amounts)(nil),              // 9: kkm.proto.TicketRequest.Amounts
	(*TicketRequest_Item_Commodity)(nil),       // 10: kkm.proto.TicketRequest.Item.Commodity
	(*TicketRequest_Item_StornoCommodity)(nil), // 11: kkm.proto.TicketRequest.Item.StornoCommodity
	(*TicketRequest_Domain_Services)(nil),      // 12: kkm.proto.TicketRequest.Domain.Services
	(*TicketRequest_Domain_GasOil)(nil),        // 13: kkm.proto.TicketRequest.Domain.GasOil
	(*TicketRequest_Domain_Taxi)(nil),          // 14: kkm.proto.TicketRequest.Domain.Taxi
	(*TicketRequest_Domain_Parking)(nil),       // 15: kkm.proto.TicketRequest.Domain.Parking
	(OperationTypeEnum)(0),                     // 16: kkm.proto.OperationTypeEnum
	(*DateTime)(nil),                           // 17: kkm.proto.DateTime
	(*TicketAdInfo)(nil),                       // 18: kkm.proto.TicketAdInfo
	(*Money)(nil),                              // 19: kkm.proto.Money
	(ItemTypeEnum)(0),                          // 20: kkm.proto.ItemTypeEnum
	(DomainTypeEnum)(0),                        // 21: kkm.proto.DomainTypeEnum
	(PaymentTypeEnum)(0),                       // 22: kkm.proto.PaymentTypeEnum
}
var file_ticket_proto_depIdxs = []int32{
	16, // 0: kkm.proto.TicketRequest.operation:type_name -> kkm.proto.OperationTypeEnum
	17, // 1: kkm.proto.TicketRequest.date_time:type_name -> kkm.proto.DateTime
	4,  // 2: kkm.proto.TicketRequest.operator:type_name -> kkm.proto.TicketRequest.Operator
	6,  // 3: kkm.proto.TicketRequest.domain:type_name -> kkm.proto.TicketRequest.Domain
	5,  // 4: kkm.proto.TicketRequest.items:type_name -> kkm.proto.TicketRequest.Item
	8,  // 5: kkm.proto.TicketRequest.payments:type_name -> kkm.proto.TicketRequest.Payment
	2,  // 6: kkm.proto.TicketRequest.taxes:type_name -> kkm.proto.TicketRequest.Tax
	9,  // 7: kkm.proto.TicketRequest.amounts:type_name -> kkm.proto.TicketRequest.Amounts
	7,  // 8: kkm.proto.TicketRequest.extension_options:type_name -> kkm.proto.TicketRequest.ExtensionOptions
	18, // 9: kkm.proto.TicketRequest.ad_infos:type_name -> kkm.proto.TicketAdInfo
	19, // 10: kkm.proto.TicketRequest.Tax.sum:type_name -> kkm.proto.Money
	19, // 11: kkm.proto.TicketRequest.Modifier.sum:type_name -> kkm.proto.Money
	2,  // 12: kkm.proto.TicketRequest.Modifier.taxes:type_name -> kkm.proto.TicketRequest.Tax
	20, // 13: kkm.proto.TicketRequest.Item.type:type_name -> kkm.proto.ItemTypeEnum
	10, // 14: kkm.proto.TicketRequest.Item.commodity:type_name -> kkm.proto.TicketRequest.Item.Commodity
	11, // 15: kkm.proto.TicketRequest.Item.storno_commodity:type_name -> kkm.proto.TicketRequest.Item.StornoCommodity
	3,  // 16: kkm.proto.TicketRequest.Item.markup:type_name -> kkm.proto.TicketRequest.Modifier
	3,  // 17: kkm.proto.TicketRequest.Item.storno_markup:type_name -> kkm.proto.TicketRequest.Modifier
	3,  // 18: kkm.proto.TicketRequest.Item.discount:type_name -> kkm.proto.TicketRequest.Modifier
	3,  // 19: kkm.proto.TicketRequest.Item.storno_discount:type_name -> kkm.proto.TicketRequest.Modifier
	21, // 20: kkm.proto.TicketRequest.Domain.type:type_name -> kkm.proto.DomainTypeEnum
	12, // 21: kkm.proto.TicketRequest.Domain.services:type_name -> kkm.proto.TicketRequest.Domain.Services
	13, // 22: kkm.proto.TicketRequest.Domain.gasoil:type_name -> kkm.proto.TicketRequest.Domain.GasOil
	14, // 23: kkm.proto.TicketRequest.Domain.taxi:type_name -> kkm.proto.TicketRequest.Domain.Taxi
	15, // 24: kkm.proto.TicketRequest.Domain.parking:type_name -> kkm.proto.TicketRequest.Domain.Parking
	22, // 25: kkm.proto.TicketRequest.Payment.type:type_name -> kkm.proto.PaymentTypeEnum
	19, // 26: kkm.proto.TicketRequest.Payment.sum:type_name -> kkm.proto.Money
	19, // 27: kkm.proto.TicketRequest.Amounts.total:type_name -> kkm.proto.Money
	19, // 28: kkm.proto.TicketRequest.Amounts.taken:type_name -> kkm.proto.Money
	19, // 29: kkm.proto.TicketRequest.Amounts.change:type_name -> kkm.proto.Money
	3,  // 30: kkm.proto.TicketRequest.Amounts.markup:type_name -> kkm.proto.TicketRequest.Modifier
	3,  // 31: kkm.proto.TicketRequest.Amounts.discount:type_name -> kkm.proto.TicketRequest.Modifier
	19, // 32: kkm.proto.TicketRequest.Item.Commodity.price:type_name -> kkm.proto.Money
	19, // 33: kkm.proto.TicketRequest.Item.Commodity.sum:type_name -> kkm.proto.Money
	2,  // 34: kkm.proto.TicketRequest.Item.Commodity.taxes:type_name -> kkm.proto.TicketRequest.Tax
	19, // 35: kkm.proto.TicketRequest.Item.StornoCommodity.price:type_name -> kkm.proto.Money
	19, // 36: kkm.proto.TicketRequest.Item.StornoCommodity.sum:type_name -> kkm.proto.Money
	2,  // 37: kkm.proto.TicketRequest.Item.StornoCommodity.taxes:type_name -> kkm.proto.TicketRequest.Tax
	19, // 38: kkm.proto.TicketRequest.Domain.GasOil.correction_sum:type_name -> kkm.proto.Money
	19, // 39: kkm.proto.TicketRequest.Domain.Taxi.current_fee:type_name -> kkm.proto.Money
	17, // 40: kkm.proto.TicketRequest.Domain.Parking.begin_time:type_name -> kkm.proto.DateTime
	17, // 41: kkm.proto.TicketRequest.Domain.Parking.end_time:type_name -> kkm.proto.DateTime
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_ticket_proto_init() }
func file_ticket_proto_init() {
	if File_ticket_proto != nil {
		return
	}
	file_common_proto_init()
	file_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Modifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_ExtensionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Amounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Item_Commodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Item_StornoCommodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Domain_Services); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Domain_GasOil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Domain_Taxi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticket_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest_Domain_Parking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ticket_proto_goTypes,
		DependencyIndexes: file_ticket_proto_depIdxs,
		MessageInfos:      file_ticket_proto_msgTypes,
	}.Build()
	File_ticket_proto = out.File
	file_ticket_proto_rawDesc = nil
	file_ticket_proto_goTypes = nil
	file_ticket_proto_depIdxs = nil
}
