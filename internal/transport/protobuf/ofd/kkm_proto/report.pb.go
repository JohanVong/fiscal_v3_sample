// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: report.proto

package kkm_proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CloseShiftRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloseTime             *DateTime `protobuf:"bytes,1,req,name=close_time,json=closeTime" json:"close_time,omitempty"`
	IsOffline             *bool     `protobuf:"varint,2,opt,name=is_offline,json=isOffline" json:"is_offline,omitempty"`
	FrShiftNumber         *uint32   `protobuf:"varint,3,opt,name=fr_shift_number,json=frShiftNumber" json:"fr_shift_number,omitempty"`
	WithdrawMoney         *bool     `protobuf:"varint,4,opt,name=withdraw_money,json=withdrawMoney" json:"withdraw_money,omitempty"`
	PrintedDocumentNumber *uint64   `protobuf:"varint,5,opt,name=printed_document_number,json=printedDocumentNumber" json:"printed_document_number,omitempty"`
}

func (x *CloseShiftRequest) Reset() {
	*x = CloseShiftRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseShiftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShiftRequest) ProtoMessage() {}

func (x *CloseShiftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShiftRequest.ProtoReflect.Descriptor instead.
func (*CloseShiftRequest) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{0}
}

func (x *CloseShiftRequest) GetCloseTime() *DateTime {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *CloseShiftRequest) GetIsOffline() bool {
	if x != nil && x.IsOffline != nil {
		return *x.IsOffline
	}
	return false
}

func (x *CloseShiftRequest) GetFrShiftNumber() uint32 {
	if x != nil && x.FrShiftNumber != nil {
		return *x.FrShiftNumber
	}
	return 0
}

func (x *CloseShiftRequest) GetWithdrawMoney() bool {
	if x != nil && x.WithdrawMoney != nil {
		return *x.WithdrawMoney
	}
	return false
}

func (x *CloseShiftRequest) GetPrintedDocumentNumber() uint64 {
	if x != nil && x.PrintedDocumentNumber != nil {
		return *x.PrintedDocumentNumber
	}
	return 0
}

type MoneyPlacementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime              *DateTime           `protobuf:"bytes,1,req,name=datetime" json:"datetime,omitempty"`
	Operation             *MoneyPlacementEnum `protobuf:"varint,2,req,name=operation,enum=kkm.proto.MoneyPlacementEnum" json:"operation,omitempty"`
	Sum                   *Money              `protobuf:"bytes,3,req,name=sum" json:"sum,omitempty"`
	IsOffline             *bool               `protobuf:"varint,4,opt,name=is_offline,json=isOffline" json:"is_offline,omitempty"`
	FrShiftNumber         *uint32             `protobuf:"varint,5,opt,name=fr_shift_number,json=frShiftNumber" json:"fr_shift_number,omitempty"`
	PrintedDocumentNumber *uint64             `protobuf:"varint,6,opt,name=printed_document_number,json=printedDocumentNumber" json:"printed_document_number,omitempty"`
	Operator              *TicketRequest_Operator         `protobuf:"bytes,7,req,name=operator" json:"operator,omitempty"`
}

func (x *MoneyPlacementRequest) Reset() {
	*x = MoneyPlacementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyPlacementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyPlacementRequest) ProtoMessage() {}

func (x *MoneyPlacementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyPlacementRequest.ProtoReflect.Descriptor instead.
func (*MoneyPlacementRequest) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{1}
}

func (x *MoneyPlacementRequest) GetDatetime() *DateTime {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *MoneyPlacementRequest) GetOperation() MoneyPlacementEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return MoneyPlacementEnum_MONEY_PLACEMENT_DEPOSIT
}

func (x *MoneyPlacementRequest) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *MoneyPlacementRequest) GetIsOffline() bool {
	if x != nil && x.IsOffline != nil {
		return *x.IsOffline
	}
	return false
}

func (x *MoneyPlacementRequest) GetFrShiftNumber() uint32 {
	if x != nil && x.FrShiftNumber != nil {
		return *x.FrShiftNumber
	}
	return 0
}

func (x *MoneyPlacementRequest) GetPrintedDocumentNumber() uint64 {
	if x != nil && x.PrintedDocumentNumber != nil {
		return *x.PrintedDocumentNumber
	}
	return 0
}

func (x *MoneyPlacementRequest) GetOperator() *TicketRequest_Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

type ZXReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateTime                  *DateTime                   `protobuf:"bytes,1,req,name=date_time,json=dateTime" json:"date_time,omitempty"`
	ShiftNumber               *uint32                     `protobuf:"varint,2,req,name=shift_number,json=shiftNumber" json:"shift_number,omitempty"`
	Sections                  []*ZXReport_Section         `protobuf:"bytes,3,rep,name=sections" json:"sections,omitempty"`
	Operations                []*ZXReport_Operation       `protobuf:"bytes,4,rep,name=operations" json:"operations,omitempty"`
	Discounts                 []*ZXReport_Operation       `protobuf:"bytes,5,rep,name=discounts" json:"discounts,omitempty"`
	Markups                   []*ZXReport_Operation       `protobuf:"bytes,6,rep,name=markups" json:"markups,omitempty"`
	TotalResult               []*ZXReport_Operation       `protobuf:"bytes,7,rep,name=total_result,json=totalResult" json:"total_result,omitempty"`
	Taxes                     []*ZXReport_Tax             `protobuf:"bytes,8,rep,name=taxes" json:"taxes,omitempty"`
	StartShiftNonNullableSums []*ZXReport_NonNullableSum  `protobuf:"bytes,9,rep,name=start_shift_non_nullable_sums,json=startShiftNonNullableSums" json:"start_shift_non_nullable_sums,omitempty"`
	TicketOperations          []*ZXReport_TicketOperation `protobuf:"bytes,10,rep,name=ticket_operations,json=ticketOperations" json:"ticket_operations,omitempty"`
	MoneyPlacements           []*ZXReport_MoneyPlacement  `protobuf:"bytes,11,rep,name=money_placements,json=moneyPlacements" json:"money_placements,omitempty"`
	AnnulledTickets           *ZXReport_AnnulledTickets   `protobuf:"bytes,12,opt,name=annulled_tickets,json=annulledTickets" json:"annulled_tickets,omitempty"`
	CashSum                   *Money                      `protobuf:"bytes,13,req,name=cash_sum,json=cashSum" json:"cash_sum,omitempty"`
	Revenue                   *ZXReport_Revenue           `protobuf:"bytes,14,req,name=revenue" json:"revenue,omitempty"`
	NonNullableSums           []*ZXReport_NonNullableSum  `protobuf:"bytes,15,rep,name=non_nullable_sums,json=nonNullableSums" json:"non_nullable_sums,omitempty"`
}

func (x *ZXReport) Reset() {
	*x = ZXReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport) ProtoMessage() {}

func (x *ZXReport) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport.ProtoReflect.Descriptor instead.
func (*ZXReport) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2}
}

func (x *ZXReport) GetDateTime() *DateTime {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *ZXReport) GetShiftNumber() uint32 {
	if x != nil && x.ShiftNumber != nil {
		return *x.ShiftNumber
	}
	return 0
}

func (x *ZXReport) GetSections() []*ZXReport_Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *ZXReport) GetOperations() []*ZXReport_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ZXReport) GetDiscounts() []*ZXReport_Operation {
	if x != nil {
		return x.Discounts
	}
	return nil
}

func (x *ZXReport) GetMarkups() []*ZXReport_Operation {
	if x != nil {
		return x.Markups
	}
	return nil
}

func (x *ZXReport) GetTotalResult() []*ZXReport_Operation {
	if x != nil {
		return x.TotalResult
	}
	return nil
}

func (x *ZXReport) GetTaxes() []*ZXReport_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *ZXReport) GetStartShiftNonNullableSums() []*ZXReport_NonNullableSum {
	if x != nil {
		return x.StartShiftNonNullableSums
	}
	return nil
}

func (x *ZXReport) GetTicketOperations() []*ZXReport_TicketOperation {
	if x != nil {
		return x.TicketOperations
	}
	return nil
}

func (x *ZXReport) GetMoneyPlacements() []*ZXReport_MoneyPlacement {
	if x != nil {
		return x.MoneyPlacements
	}
	return nil
}

func (x *ZXReport) GetAnnulledTickets() *ZXReport_AnnulledTickets {
	if x != nil {
		return x.AnnulledTickets
	}
	return nil
}

func (x *ZXReport) GetCashSum() *Money {
	if x != nil {
		return x.CashSum
	}
	return nil
}

func (x *ZXReport) GetRevenue() *ZXReport_Revenue {
	if x != nil {
		return x.Revenue
	}
	return nil
}

func (x *ZXReport) GetNonNullableSums() []*ZXReport_NonNullableSum {
	if x != nil {
		return x.NonNullableSums
	}
	return nil
}

type ReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report    *ReportTypeEnum `protobuf:"varint,1,req,name=report,enum=kkm.proto.ReportTypeEnum" json:"report,omitempty"`
	DateTime  *DateTime       `protobuf:"bytes,2,req,name=date_time,json=dateTime" json:"date_time,omitempty"`
	IsOffline *bool           `protobuf:"varint,3,opt,name=is_offline,json=isOffline" json:"is_offline,omitempty"`
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{3}
}

func (x *ReportRequest) GetReport() ReportTypeEnum {
	if x != nil && x.Report != nil {
		return *x.Report
	}
	return ReportTypeEnum_REPORT_Z
}

func (x *ReportRequest) GetDateTime() *DateTime {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *ReportRequest) GetIsOffline() bool {
	if x != nil && x.IsOffline != nil {
		return *x.IsOffline
	}
	return false
}

type ReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report   *ReportTypeEnum `protobuf:"varint,1,req,name=report,enum=kkm.proto.ReportTypeEnum" json:"report,omitempty"`
	ZxReport *ZXReport       `protobuf:"bytes,2,opt,name=zx_report,json=zxReport" json:"zx_report,omitempty"`
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{4}
}

func (x *ReportResponse) GetReport() ReportTypeEnum {
	if x != nil && x.Report != nil {
		return *x.Report
	}
	return ReportTypeEnum_REPORT_Z
}

func (x *ReportResponse) GetZxReport() *ZXReport {
	if x != nil {
		return x.ZxReport
	}
	return nil
}

type ZXReport_Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *OperationTypeEnum `protobuf:"varint,1,req,name=operation,enum=kkm.proto.OperationTypeEnum" json:"operation,omitempty"`
	Count     *uint32            `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Sum       *Money             `protobuf:"bytes,3,req,name=sum" json:"sum,omitempty"`
}

func (x *ZXReport_Operation) Reset() {
	*x = ZXReport_Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_Operation) ProtoMessage() {}

func (x *ZXReport_Operation) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_Operation.ProtoReflect.Descriptor instead.
func (*ZXReport_Operation) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ZXReport_Operation) GetOperation() OperationTypeEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return OperationTypeEnum_OPERATION_BUY
}

func (x *ZXReport_Operation) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ZXReport_Operation) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

type ZXReport_Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionCode *string               `protobuf:"bytes,1,req,name=section_code,json=sectionCode" json:"section_code,omitempty"`
	Operations  []*ZXReport_Operation `protobuf:"bytes,2,rep,name=operations" json:"operations,omitempty"`
}

func (x *ZXReport_Section) Reset() {
	*x = ZXReport_Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_Section) ProtoMessage() {}

func (x *ZXReport_Section) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_Section.ProtoReflect.Descriptor instead.
func (*ZXReport_Section) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ZXReport_Section) GetSectionCode() string {
	if x != nil && x.SectionCode != nil {
		return *x.SectionCode
	}
	return ""
}

func (x *ZXReport_Section) GetOperations() []*ZXReport_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ZXReport_Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxType    *uint32                      `protobuf:"varint,1,req,name=tax_type,json=taxType" json:"tax_type,omitempty"`
	Percent    *uint32                      `protobuf:"varint,2,req,name=percent" json:"percent,omitempty"`
	Operations []*ZXReport_Tax_TaxOperation `protobuf:"bytes,3,rep,name=operations" json:"operations,omitempty"`
}

func (x *ZXReport_Tax) Reset() {
	*x = ZXReport_Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_Tax) ProtoMessage() {}

func (x *ZXReport_Tax) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_Tax.ProtoReflect.Descriptor instead.
func (*ZXReport_Tax) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ZXReport_Tax) GetTaxType() uint32 {
	if x != nil && x.TaxType != nil {
		return *x.TaxType
	}
	return 0
}

func (x *ZXReport_Tax) GetPercent() uint32 {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return 0
}

func (x *ZXReport_Tax) GetOperations() []*ZXReport_Tax_TaxOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ZXReport_NonNullableSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *OperationTypeEnum `protobuf:"varint,1,req,name=operation,enum=kkm.proto.OperationTypeEnum" json:"operation,omitempty"`
	Sum       *Money             `protobuf:"bytes,2,req,name=sum" json:"sum,omitempty"`
}

func (x *ZXReport_NonNullableSum) Reset() {
	*x = ZXReport_NonNullableSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_NonNullableSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_NonNullableSum) ProtoMessage() {}

func (x *ZXReport_NonNullableSum) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_NonNullableSum.ProtoReflect.Descriptor instead.
func (*ZXReport_NonNullableSum) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ZXReport_NonNullableSum) GetOperation() OperationTypeEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return OperationTypeEnum_OPERATION_BUY
}

func (x *ZXReport_NonNullableSum) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

type ZXReport_TicketOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation         *OperationTypeEnum                  `protobuf:"varint,1,req,name=operation,enum=kkm.proto.OperationTypeEnum" json:"operation,omitempty"`
	TicketsTotalCount *uint32                             `protobuf:"varint,2,req,name=tickets_total_count,json=ticketsTotalCount" json:"tickets_total_count,omitempty"`
	TicketsCount      *uint32                             `protobuf:"varint,3,req,name=tickets_count,json=ticketsCount" json:"tickets_count,omitempty"`
	TicketsSum        *Money                              `protobuf:"bytes,4,req,name=tickets_sum,json=ticketsSum" json:"tickets_sum,omitempty"`
	Payments          []*ZXReport_TicketOperation_Payment `protobuf:"bytes,5,rep,name=payments" json:"payments,omitempty"`
}

func (x *ZXReport_TicketOperation) Reset() {
	*x = ZXReport_TicketOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_TicketOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_TicketOperation) ProtoMessage() {}

func (x *ZXReport_TicketOperation) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_TicketOperation.ProtoReflect.Descriptor instead.
func (*ZXReport_TicketOperation) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ZXReport_TicketOperation) GetOperation() OperationTypeEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return OperationTypeEnum_OPERATION_BUY
}

func (x *ZXReport_TicketOperation) GetTicketsTotalCount() uint32 {
	if x != nil && x.TicketsTotalCount != nil {
		return *x.TicketsTotalCount
	}
	return 0
}

func (x *ZXReport_TicketOperation) GetTicketsCount() uint32 {
	if x != nil && x.TicketsCount != nil {
		return *x.TicketsCount
	}
	return 0
}

func (x *ZXReport_TicketOperation) GetTicketsSum() *Money {
	if x != nil {
		return x.TicketsSum
	}
	return nil
}

func (x *ZXReport_TicketOperation) GetPayments() []*ZXReport_TicketOperation_Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type ZXReport_MoneyPlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation            *MoneyPlacementEnum `protobuf:"varint,1,req,name=operation,enum=kkm.proto.MoneyPlacementEnum" json:"operation,omitempty"`
	OperationsTotalCount *uint32             `protobuf:"varint,2,req,name=operations_total_count,json=operationsTotalCount" json:"operations_total_count,omitempty"`
	OperationsCount      *uint32             `protobuf:"varint,3,req,name=operations_count,json=operationsCount" json:"operations_count,omitempty"`
	OperationsSum        *Money              `protobuf:"bytes,4,req,name=operations_sum,json=operationsSum" json:"operations_sum,omitempty"`
}

func (x *ZXReport_MoneyPlacement) Reset() {
	*x = ZXReport_MoneyPlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_MoneyPlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_MoneyPlacement) ProtoMessage() {}

func (x *ZXReport_MoneyPlacement) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_MoneyPlacement.ProtoReflect.Descriptor instead.
func (*ZXReport_MoneyPlacement) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 5}
}

func (x *ZXReport_MoneyPlacement) GetOperation() MoneyPlacementEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return MoneyPlacementEnum_MONEY_PLACEMENT_DEPOSIT
}

func (x *ZXReport_MoneyPlacement) GetOperationsTotalCount() uint32 {
	if x != nil && x.OperationsTotalCount != nil {
		return *x.OperationsTotalCount
	}
	return 0
}

func (x *ZXReport_MoneyPlacement) GetOperationsCount() uint32 {
	if x != nil && x.OperationsCount != nil {
		return *x.OperationsCount
	}
	return 0
}

func (x *ZXReport_MoneyPlacement) GetOperationsSum() *Money {
	if x != nil {
		return x.OperationsSum
	}
	return nil
}

type ZXReport_AnnulledTickets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnulledTicketsTotalCount *uint32               `protobuf:"varint,1,req,name=annulled_tickets_total_count,json=annulledTicketsTotalCount" json:"annulled_tickets_total_count,omitempty"`
	AnnulledTicketsCount      *uint32               `protobuf:"varint,2,req,name=annulled_tickets_count,json=annulledTicketsCount" json:"annulled_tickets_count,omitempty"`
	AnnulledOperations        []*ZXReport_Operation `protobuf:"bytes,3,rep,name=annulled_operations,json=annulledOperations" json:"annulled_operations,omitempty"`
}

func (x *ZXReport_AnnulledTickets) Reset() {
	*x = ZXReport_AnnulledTickets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_AnnulledTickets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_AnnulledTickets) ProtoMessage() {}

func (x *ZXReport_AnnulledTickets) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_AnnulledTickets.ProtoReflect.Descriptor instead.
func (*ZXReport_AnnulledTickets) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 6}
}

func (x *ZXReport_AnnulledTickets) GetAnnulledTicketsTotalCount() uint32 {
	if x != nil && x.AnnulledTicketsTotalCount != nil {
		return *x.AnnulledTicketsTotalCount
	}
	return 0
}

func (x *ZXReport_AnnulledTickets) GetAnnulledTicketsCount() uint32 {
	if x != nil && x.AnnulledTicketsCount != nil {
		return *x.AnnulledTicketsCount
	}
	return 0
}

func (x *ZXReport_AnnulledTickets) GetAnnulledOperations() []*ZXReport_Operation {
	if x != nil {
		return x.AnnulledOperations
	}
	return nil
}

type ZXReport_Revenue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum        *Money `protobuf:"bytes,1,req,name=sum" json:"sum,omitempty"`
	IsNegative *bool  `protobuf:"varint,2,req,name=is_negative,json=isNegative" json:"is_negative,omitempty"`
}

func (x *ZXReport_Revenue) Reset() {
	*x = ZXReport_Revenue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_Revenue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_Revenue) ProtoMessage() {}

func (x *ZXReport_Revenue) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_Revenue.ProtoReflect.Descriptor instead.
func (*ZXReport_Revenue) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 7}
}

func (x *ZXReport_Revenue) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

func (x *ZXReport_Revenue) GetIsNegative() bool {
	if x != nil && x.IsNegative != nil {
		return *x.IsNegative
	}
	return false
}

type ZXReport_Tax_TaxOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *OperationTypeEnum `protobuf:"varint,1,req,name=operation,enum=kkm.proto.OperationTypeEnum" json:"operation,omitempty"`
	Turnover  *Money             `protobuf:"bytes,2,req,name=turnover" json:"turnover,omitempty"`
	Sum       *Money             `protobuf:"bytes,3,req,name=sum" json:"sum,omitempty"`
}

func (x *ZXReport_Tax_TaxOperation) Reset() {
	*x = ZXReport_Tax_TaxOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_Tax_TaxOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_Tax_TaxOperation) ProtoMessage() {}

func (x *ZXReport_Tax_TaxOperation) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_Tax_TaxOperation.ProtoReflect.Descriptor instead.
func (*ZXReport_Tax_TaxOperation) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 2, 0}
}

func (x *ZXReport_Tax_TaxOperation) GetOperation() OperationTypeEnum {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return OperationTypeEnum_OPERATION_BUY
}

func (x *ZXReport_Tax_TaxOperation) GetTurnover() *Money {
	if x != nil {
		return x.Turnover
	}
	return nil
}

func (x *ZXReport_Tax_TaxOperation) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

type ZXReport_TicketOperation_Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *PaymentTypeEnum `protobuf:"varint,1,req,name=payment,enum=kkm.proto.PaymentTypeEnum" json:"payment,omitempty"`
	Sum     *Money           `protobuf:"bytes,2,req,name=sum" json:"sum,omitempty"`
}

func (x *ZXReport_TicketOperation_Payment) Reset() {
	*x = ZXReport_TicketOperation_Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZXReport_TicketOperation_Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZXReport_TicketOperation_Payment) ProtoMessage() {}

func (x *ZXReport_TicketOperation_Payment) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZXReport_TicketOperation_Payment.ProtoReflect.Descriptor instead.
func (*ZXReport_TicketOperation_Payment) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2, 4, 0}
}

func (x *ZXReport_TicketOperation_Payment) GetPayment() PaymentTypeEnum {
	if x != nil && x.Payment != nil {
		return *x.Payment
	}
	return PaymentTypeEnum_PAYMENT_CASH
}

func (x *ZXReport_TicketOperation_Payment) GetSum() *Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

var File_report_proto protoreflect.FileDescriptor

var file_report_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x69,
	0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x66, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0xf0, 0x01, 0x0a, 0x15,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x5f, 0x73, 0x68, 0x69,
	0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x66, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xe9,
	0x13, 0x0a, 0x08, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a,
	0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6b,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x40,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2d, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x12,
	0x64, 0x0a, 0x1d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x6e,
	0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4e, 0x6f, 0x6e, 0x4e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x19, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x68, 0x69, 0x66, 0x74, 0x4e, 0x6f, 0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x75, 0x6d, 0x73, 0x12, 0x50, 0x0a, 0x11, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x61, 0x6e, 0x6e, 0x75, 0x6c, 0x6c,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x0f, 0x61, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x73,
	0x75, 0x6d, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68,
	0x53, 0x75, 0x6d, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0e,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x6e, 0x6f,
	0x6e, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4e, 0x6f, 0x6e, 0x4e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x0f, 0x6e, 0x6f, 0x6e, 0x4e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x73, 0x1a, 0x81, 0x01, 0x0a, 0x09, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x6b,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a, 0x6b,
	0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9f, 0x02, 0x0a, 0x03,
	0x54, 0x61, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b,
	0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x54, 0x61, 0x78, 0x2e, 0x54, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9c,
	0x01, 0x0a, 0x0c, 0x54, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x74,
	0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a, 0x70, 0x0a,
	0x0e, 0x4e, 0x6f, 0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x12,
	0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x03, 0x73,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a,
	0x83, 0x03, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x13, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f,
	0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0a, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x53, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x63, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6b,
	0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x03, 0x73, 0x75, 0x6d, 0x1a, 0xe7, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6b, 0x6b,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x1a,
	0xd8, 0x01, 0x0a, 0x0f, 0x41, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x61, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x19, 0x61, 0x6e, 0x6e, 0x75, 0x6c,
	0x6c, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x14, 0x61, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x13, 0x61, 0x6e,
	0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x61, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x65, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4e, 0x0a, 0x07, 0x52, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6b,
	0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x30, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0x75, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x7a, 0x78, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x5a, 0x58, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x7a,
	0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x02, 0x48, 0x01,
}

var (
	file_report_proto_rawDescOnce sync.Once
	file_report_proto_rawDescData = file_report_proto_rawDesc
)

func file_report_proto_rawDescGZIP() []byte {
	file_report_proto_rawDescOnce.Do(func() {
		file_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_report_proto_rawDescData)
	})
	return file_report_proto_rawDescData
}

var file_report_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_report_proto_goTypes = []interface{}{
	(*CloseShiftRequest)(nil),                // 0: kkm.proto.CloseShiftRequest
	(*MoneyPlacementRequest)(nil),            // 1: kkm.proto.MoneyPlacementRequest
	(*ZXReport)(nil),                         // 2: kkm.proto.ZXReport
	(*ReportRequest)(nil),                    // 3: kkm.proto.ReportRequest
	(*ReportResponse)(nil),                   // 4: kkm.proto.ReportResponse
	(*ZXReport_Operation)(nil),               // 5: kkm.proto.ZXReport.Operation
	(*ZXReport_Section)(nil),                 // 6: kkm.proto.ZXReport.Section
	(*ZXReport_Tax)(nil),                     // 7: kkm.proto.ZXReport.Tax
	(*ZXReport_NonNullableSum)(nil),          // 8: kkm.proto.ZXReport.NonNullableSum
	(*ZXReport_TicketOperation)(nil),         // 9: kkm.proto.ZXReport.TicketOperation
	(*ZXReport_MoneyPlacement)(nil),          // 10: kkm.proto.ZXReport.MoneyPlacement
	(*ZXReport_AnnulledTickets)(nil),         // 11: kkm.proto.ZXReport.AnnulledTickets
	(*ZXReport_Revenue)(nil),                 // 12: kkm.proto.ZXReport.Revenue
	(*ZXReport_Tax_TaxOperation)(nil),        // 13: kkm.proto.ZXReport.Tax.TaxOperation
	(*ZXReport_TicketOperation_Payment)(nil), // 14: kkm.proto.ZXReport.TicketOperation.Payment
	(*DateTime)(nil),                         // 15: kkm.proto.DateTime
	(MoneyPlacementEnum)(0),                  // 16: kkm.proto.MoneyPlacementEnum
	(*Money)(nil),                            // 17: kkm.proto.Money
	(ReportTypeEnum)(0),                      // 18: kkm.proto.ReportTypeEnum
	(OperationTypeEnum)(0),                   // 19: kkm.proto.OperationTypeEnum
	(PaymentTypeEnum)(0),                     // 20: kkm.proto.PaymentTypeEnum
}
var file_report_proto_depIdxs = []int32{
	15, // 0: kkm.proto.CloseShiftRequest.close_time:type_name -> kkm.proto.DateTime
	15, // 1: kkm.proto.MoneyPlacementRequest.datetime:type_name -> kkm.proto.DateTime
	16, // 2: kkm.proto.MoneyPlacementRequest.operation:type_name -> kkm.proto.MoneyPlacementEnum
	17, // 3: kkm.proto.MoneyPlacementRequest.sum:type_name -> kkm.proto.Money
	15, // 4: kkm.proto.ZXReport.date_time:type_name -> kkm.proto.DateTime
	6,  // 5: kkm.proto.ZXReport.sections:type_name -> kkm.proto.ZXReport.Section
	5,  // 6: kkm.proto.ZXReport.operations:type_name -> kkm.proto.ZXReport.Operation
	5,  // 7: kkm.proto.ZXReport.discounts:type_name -> kkm.proto.ZXReport.Operation
	5,  // 8: kkm.proto.ZXReport.markups:type_name -> kkm.proto.ZXReport.Operation
	5,  // 9: kkm.proto.ZXReport.total_result:type_name -> kkm.proto.ZXReport.Operation
	7,  // 10: kkm.proto.ZXReport.taxes:type_name -> kkm.proto.ZXReport.Tax
	8,  // 11: kkm.proto.ZXReport.start_shift_non_nullable_sums:type_name -> kkm.proto.ZXReport.NonNullableSum
	9,  // 12: kkm.proto.ZXReport.ticket_operations:type_name -> kkm.proto.ZXReport.TicketOperation
	10, // 13: kkm.proto.ZXReport.money_placements:type_name -> kkm.proto.ZXReport.MoneyPlacement
	11, // 14: kkm.proto.ZXReport.annulled_tickets:type_name -> kkm.proto.ZXReport.AnnulledTickets
	17, // 15: kkm.proto.ZXReport.cash_sum:type_name -> kkm.proto.Money
	12, // 16: kkm.proto.ZXReport.revenue:type_name -> kkm.proto.ZXReport.Revenue
	8,  // 17: kkm.proto.ZXReport.non_nullable_sums:type_name -> kkm.proto.ZXReport.NonNullableSum
	18, // 18: kkm.proto.ReportRequest.report:type_name -> kkm.proto.ReportTypeEnum
	15, // 19: kkm.proto.ReportRequest.date_time:type_name -> kkm.proto.DateTime
	18, // 20: kkm.proto.ReportResponse.report:type_name -> kkm.proto.ReportTypeEnum
	2,  // 21: kkm.proto.ReportResponse.zx_report:type_name -> kkm.proto.ZXReport
	19, // 22: kkm.proto.ZXReport.Operation.operation:type_name -> kkm.proto.OperationTypeEnum
	17, // 23: kkm.proto.ZXReport.Operation.sum:type_name -> kkm.proto.Money
	5,  // 24: kkm.proto.ZXReport.Section.operations:type_name -> kkm.proto.ZXReport.Operation
	13, // 25: kkm.proto.ZXReport.Tax.operations:type_name -> kkm.proto.ZXReport.Tax.TaxOperation
	19, // 26: kkm.proto.ZXReport.NonNullableSum.operation:type_name -> kkm.proto.OperationTypeEnum
	17, // 27: kkm.proto.ZXReport.NonNullableSum.sum:type_name -> kkm.proto.Money
	19, // 28: kkm.proto.ZXReport.TicketOperation.operation:type_name -> kkm.proto.OperationTypeEnum
	17, // 29: kkm.proto.ZXReport.TicketOperation.tickets_sum:type_name -> kkm.proto.Money
	14, // 30: kkm.proto.ZXReport.TicketOperation.payments:type_name -> kkm.proto.ZXReport.TicketOperation.Payment
	16, // 31: kkm.proto.ZXReport.MoneyPlacement.operation:type_name -> kkm.proto.MoneyPlacementEnum
	17, // 32: kkm.proto.ZXReport.MoneyPlacement.operations_sum:type_name -> kkm.proto.Money
	5,  // 33: kkm.proto.ZXReport.AnnulledTickets.annulled_operations:type_name -> kkm.proto.ZXReport.Operation
	17, // 34: kkm.proto.ZXReport.Revenue.sum:type_name -> kkm.proto.Money
	19, // 35: kkm.proto.ZXReport.Tax.TaxOperation.operation:type_name -> kkm.proto.OperationTypeEnum
	17, // 36: kkm.proto.ZXReport.Tax.TaxOperation.turnover:type_name -> kkm.proto.Money
	17, // 37: kkm.proto.ZXReport.Tax.TaxOperation.sum:type_name -> kkm.proto.Money
	20, // 38: kkm.proto.ZXReport.TicketOperation.Payment.payment:type_name -> kkm.proto.PaymentTypeEnum
	17, // 39: kkm.proto.ZXReport.TicketOperation.Payment.sum:type_name -> kkm.proto.Money
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_report_proto_init() }
func file_report_proto_init() {
	if File_report_proto != nil {
		return
	}
	file_common_proto_init()
	file_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseShiftRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyPlacementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_NonNullableSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_TicketOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_MoneyPlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_AnnulledTickets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_Revenue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_Tax_TaxOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZXReport_TicketOperation_Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_report_proto_goTypes,
		DependencyIndexes: file_report_proto_depIdxs,
		MessageInfos:      file_report_proto_msgTypes,
	}.Build()
	File_report_proto = out.File
	file_report_proto_rawDesc = nil
	file_report_proto_goTypes = nil
	file_report_proto_depIdxs = nil
}
