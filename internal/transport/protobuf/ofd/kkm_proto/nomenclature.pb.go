// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: nomenclature.proto

package kkm_proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NomenclatureResponse_NomenclatureResultTypeEnum int32

const (
	NomenclatureResponse_RESULT_TYPE_OK                NomenclatureResponse_NomenclatureResultTypeEnum = 0
	NomenclatureResponse_RESULT_TYPE_VERSION_IS_ACTUAL NomenclatureResponse_NomenclatureResultTypeEnum = 1
	NomenclatureResponse_RESULT_TYPE_NO_VERSION        NomenclatureResponse_NomenclatureResultTypeEnum = 2
)

// Enum value maps for NomenclatureResponse_NomenclatureResultTypeEnum.
var (
	NomenclatureResponse_NomenclatureResultTypeEnum_name = map[int32]string{
		0: "RESULT_TYPE_OK",
		1: "RESULT_TYPE_VERSION_IS_ACTUAL",
		2: "RESULT_TYPE_NO_VERSION",
	}
	NomenclatureResponse_NomenclatureResultTypeEnum_value = map[string]int32{
		"RESULT_TYPE_OK":                0,
		"RESULT_TYPE_VERSION_IS_ACTUAL": 1,
		"RESULT_TYPE_NO_VERSION":        2,
	}
)

func (x NomenclatureResponse_NomenclatureResultTypeEnum) Enum() *NomenclatureResponse_NomenclatureResultTypeEnum {
	p := new(NomenclatureResponse_NomenclatureResultTypeEnum)
	*p = x
	return p
}

func (x NomenclatureResponse_NomenclatureResultTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NomenclatureResponse_NomenclatureResultTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_nomenclature_proto_enumTypes[0].Descriptor()
}

func (NomenclatureResponse_NomenclatureResultTypeEnum) Type() protoreflect.EnumType {
	return &file_nomenclature_proto_enumTypes[0]
}

func (x NomenclatureResponse_NomenclatureResultTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NomenclatureResponse_NomenclatureResultTypeEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NomenclatureResponse_NomenclatureResultTypeEnum(num)
	return nil
}

// Deprecated: Use NomenclatureResponse_NomenclatureResultTypeEnum.Descriptor instead.
func (NomenclatureResponse_NomenclatureResultTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_nomenclature_proto_rawDescGZIP(), []int{1, 0}
}

type NomenclatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentVersion *uint32 `protobuf:"varint,1,req,name=current_version,json=currentVersion" json:"current_version,omitempty"`
}

func (x *NomenclatureRequest) Reset() {
	*x = NomenclatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nomenclature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NomenclatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomenclatureRequest) ProtoMessage() {}

func (x *NomenclatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nomenclature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomenclatureRequest.ProtoReflect.Descriptor instead.
func (*NomenclatureRequest) Descriptor() ([]byte, []int) {
	return file_nomenclature_proto_rawDescGZIP(), []int{0}
}

func (x *NomenclatureRequest) GetCurrentVersion() uint32 {
	if x != nil && x.CurrentVersion != nil {
		return *x.CurrentVersion
	}
	return 0
}

type NomenclatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint32                                          `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	CreatedTime *DateTime                                        `protobuf:"bytes,2,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	Elements    []*NomenclatureResponse_Element                  `protobuf:"bytes,3,rep,name=elements" json:"elements,omitempty"`
	Result      *NomenclatureResponse_NomenclatureResultTypeEnum `protobuf:"varint,4,req,name=result,enum=kkm.proto.NomenclatureResponse_NomenclatureResultTypeEnum" json:"result,omitempty"`
}

func (x *NomenclatureResponse) Reset() {
	*x = NomenclatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nomenclature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NomenclatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomenclatureResponse) ProtoMessage() {}

func (x *NomenclatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nomenclature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomenclatureResponse.ProtoReflect.Descriptor instead.
func (*NomenclatureResponse) Descriptor() ([]byte, []int) {
	return file_nomenclature_proto_rawDescGZIP(), []int{1}
}

func (x *NomenclatureResponse) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *NomenclatureResponse) GetCreatedTime() *DateTime {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *NomenclatureResponse) GetElements() []*NomenclatureResponse_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *NomenclatureResponse) GetResult() NomenclatureResponse_NomenclatureResultTypeEnum {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return NomenclatureResponse_RESULT_TYPE_OK
}

type NomenclatureResponse_Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaxationType *uint32 `protobuf:"varint,1,req,name=taxation_type,json=taxationType" json:"taxation_type,omitempty"`
	TaxType      *uint32 `protobuf:"varint,2,req,name=tax_type,json=taxType" json:"tax_type,omitempty"`
	TaxPercent   *uint32 `protobuf:"varint,3,req,name=tax_percent,json=taxPercent" json:"tax_percent,omitempty"`
}

func (x *NomenclatureResponse_Tax) Reset() {
	*x = NomenclatureResponse_Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nomenclature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NomenclatureResponse_Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomenclatureResponse_Tax) ProtoMessage() {}

func (x *NomenclatureResponse_Tax) ProtoReflect() protoreflect.Message {
	mi := &file_nomenclature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomenclatureResponse_Tax.ProtoReflect.Descriptor instead.
func (*NomenclatureResponse_Tax) Descriptor() ([]byte, []int) {
	return file_nomenclature_proto_rawDescGZIP(), []int{1, 0}
}

func (x *NomenclatureResponse_Tax) GetTaxationType() uint32 {
	if x != nil && x.TaxationType != nil {
		return *x.TaxationType
	}
	return 0
}

func (x *NomenclatureResponse_Tax) GetTaxType() uint32 {
	if x != nil && x.TaxType != nil {
		return *x.TaxType
	}
	return 0
}

func (x *NomenclatureResponse_Tax) GetTaxPercent() uint32 {
	if x != nil && x.TaxPercent != nil {
		return *x.TaxPercent
	}
	return 0
}

type NomenclatureResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article           *string                     `protobuf:"bytes,1,opt,name=article" json:"article,omitempty"`
	Barcode           *string                     `protobuf:"bytes,2,opt,name=barcode" json:"barcode,omitempty"`
	Description       *string                     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	PurchasePrice     *Money                      `protobuf:"bytes,6,req,name=purchase_price,json=purchasePrice" json:"purchase_price,omitempty"`
	SellPrice         *Money                      `protobuf:"bytes,7,req,name=sell_price,json=sellPrice" json:"sell_price,omitempty"`
	DiscountPercent   *uint32                     `protobuf:"varint,8,opt,name=discount_percent,json=discountPercent" json:"discount_percent,omitempty"`
	DiscountSum       *Money                      `protobuf:"bytes,9,opt,name=discount_sum,json=discountSum" json:"discount_sum,omitempty"`
	MarkupPercent     *uint32                     `protobuf:"varint,10,opt,name=markup_percent,json=markupPercent" json:"markup_percent,omitempty"`
	MarkupSum         *Money                      `protobuf:"bytes,11,opt,name=markup_sum,json=markupSum" json:"markup_sum,omitempty"`
	Taxes             []*NomenclatureResponse_Tax `protobuf:"bytes,12,rep,name=taxes" json:"taxes,omitempty"`
	MeasureCount      *uint32                     `protobuf:"varint,13,opt,name=measure_count,json=measureCount" json:"measure_count,omitempty"`
	MeasureTitle      *string                     `protobuf:"bytes,14,opt,name=measure_title,json=measureTitle" json:"measure_title,omitempty"`
	MeasureFractional *bool                       `protobuf:"varint,15,opt,name=measure_fractional,json=measureFractional" json:"measure_fractional,omitempty"`
}

func (x *NomenclatureResponse_Item) Reset() {
	*x = NomenclatureResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nomenclature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NomenclatureResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomenclatureResponse_Item) ProtoMessage() {}

func (x *NomenclatureResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_nomenclature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomenclatureResponse_Item.ProtoReflect.Descriptor instead.
func (*NomenclatureResponse_Item) Descriptor() ([]byte, []int) {
	return file_nomenclature_proto_rawDescGZIP(), []int{1, 1}
}

func (x *NomenclatureResponse_Item) GetArticle() string {
	if x != nil && x.Article != nil {
		return *x.Article
	}
	return ""
}

func (x *NomenclatureResponse_Item) GetBarcode() string {
	if x != nil && x.Barcode != nil {
		return *x.Barcode
	}
	return ""
}

func (x *NomenclatureResponse_Item) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NomenclatureResponse_Item) GetPurchasePrice() *Money {
	if x != nil {
		return x.PurchasePrice
	}
	return nil
}

func (x *NomenclatureResponse_Item) GetSellPrice() *Money {
	if x != nil {
		return x.SellPrice
	}
	return nil
}

func (x *NomenclatureResponse_Item) GetDiscountPercent() uint32 {
	if x != nil && x.DiscountPercent != nil {
		return *x.DiscountPercent
	}
	return 0
}

func (x *NomenclatureResponse_Item) GetDiscountSum() *Money {
	if x != nil {
		return x.DiscountSum
	}
	return nil
}

func (x *NomenclatureResponse_Item) GetMarkupPercent() uint32 {
	if x != nil && x.MarkupPercent != nil {
		return *x.MarkupPercent
	}
	return 0
}

func (x *NomenclatureResponse_Item) GetMarkupSum() *Money {
	if x != nil {
		return x.MarkupSum
	}
	return nil
}

func (x *NomenclatureResponse_Item) GetTaxes() []*NomenclatureResponse_Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *NomenclatureResponse_Item) GetMeasureCount() uint32 {
	if x != nil && x.MeasureCount != nil {
		return *x.MeasureCount
	}
	return 0
}

func (x *NomenclatureResponse_Item) GetMeasureTitle() string {
	if x != nil && x.MeasureTitle != nil {
		return *x.MeasureTitle
	}
	return ""
}

func (x *NomenclatureResponse_Item) GetMeasureFractional() bool {
	if x != nil && x.MeasureFractional != nil {
		return *x.MeasureFractional
	}
	return false
}

type NomenclatureResponse_Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          *ElementTypeEnum           `protobuf:"varint,1,req,name=type,enum=kkm.proto.ElementTypeEnum" json:"type,omitempty"`
	Title         *string                    `protobuf:"bytes,3,req,name=title" json:"title,omitempty"`
	ParentGroupId *uint64                    `protobuf:"varint,4,opt,name=parent_group_id,json=parentGroupId" json:"parent_group_id,omitempty"`
	Id            *uint64                    `protobuf:"varint,5,req,name=id" json:"id,omitempty"`
	Item          *NomenclatureResponse_Item `protobuf:"bytes,6,opt,name=item" json:"item,omitempty"` // required if type == ITEM
}

func (x *NomenclatureResponse_Element) Reset() {
	*x = NomenclatureResponse_Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nomenclature_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NomenclatureResponse_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomenclatureResponse_Element) ProtoMessage() {}

func (x *NomenclatureResponse_Element) ProtoReflect() protoreflect.Message {
	mi := &file_nomenclature_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomenclatureResponse_Element.ProtoReflect.Descriptor instead.
func (*NomenclatureResponse_Element) Descriptor() ([]byte, []int) {
	return file_nomenclature_proto_rawDescGZIP(), []int{1, 2}
}

func (x *NomenclatureResponse_Element) GetType() ElementTypeEnum {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ElementTypeEnum_GROUP
}

func (x *NomenclatureResponse_Element) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *NomenclatureResponse_Element) GetParentGroupId() uint64 {
	if x != nil && x.ParentGroupId != nil {
		return *x.ParentGroupId
	}
	return 0
}

func (x *NomenclatureResponse_Element) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *NomenclatureResponse_Element) GetItem() *NomenclatureResponse_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_nomenclature_proto protoreflect.FileDescriptor

var file_nomenclature_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x65,
	0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x13, 0x4e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd3, 0x09, 0x0a, 0x14, 0x4e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x66, 0x0a,
	0x03, 0x54, 0x61, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x78, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x61, 0x78,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x1a, 0xb2, 0x04, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b,
	0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x5f,
	0x73, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x6d, 0x61, 0x72,
	0x6b, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x1a, 0xc1, 0x01, 0x0a, 0x07, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6b, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x6f,
	0x0a, 0x1a, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x55, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x42,
	0x02, 0x48, 0x01,
}

var (
	file_nomenclature_proto_rawDescOnce sync.Once
	file_nomenclature_proto_rawDescData = file_nomenclature_proto_rawDesc
)

func file_nomenclature_proto_rawDescGZIP() []byte {
	file_nomenclature_proto_rawDescOnce.Do(func() {
		file_nomenclature_proto_rawDescData = protoimpl.X.CompressGZIP(file_nomenclature_proto_rawDescData)
	})
	return file_nomenclature_proto_rawDescData
}

var file_nomenclature_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nomenclature_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_nomenclature_proto_goTypes = []interface{}{
	(NomenclatureResponse_NomenclatureResultTypeEnum)(0), // 0: kkm.proto.NomenclatureResponse.NomenclatureResultTypeEnum
	(*NomenclatureRequest)(nil),                          // 1: kkm.proto.NomenclatureRequest
	(*NomenclatureResponse)(nil),                         // 2: kkm.proto.NomenclatureResponse
	(*NomenclatureResponse_Tax)(nil),                     // 3: kkm.proto.NomenclatureResponse.Tax
	(*NomenclatureResponse_Item)(nil),                    // 4: kkm.proto.NomenclatureResponse.Item
	(*NomenclatureResponse_Element)(nil),                 // 5: kkm.proto.NomenclatureResponse.Element
	(*DateTime)(nil),                                     // 6: kkm.proto.DateTime
	(*Money)(nil),                                        // 7: kkm.proto.Money
	(ElementTypeEnum)(0),                                 // 8: kkm.proto.ElementTypeEnum
}
var file_nomenclature_proto_depIdxs = []int32{
	6,  // 0: kkm.proto.NomenclatureResponse.created_time:type_name -> kkm.proto.DateTime
	5,  // 1: kkm.proto.NomenclatureResponse.elements:type_name -> kkm.proto.NomenclatureResponse.Element
	0,  // 2: kkm.proto.NomenclatureResponse.result:type_name -> kkm.proto.NomenclatureResponse.NomenclatureResultTypeEnum
	7,  // 3: kkm.proto.NomenclatureResponse.Item.purchase_price:type_name -> kkm.proto.Money
	7,  // 4: kkm.proto.NomenclatureResponse.Item.sell_price:type_name -> kkm.proto.Money
	7,  // 5: kkm.proto.NomenclatureResponse.Item.discount_sum:type_name -> kkm.proto.Money
	7,  // 6: kkm.proto.NomenclatureResponse.Item.markup_sum:type_name -> kkm.proto.Money
	3,  // 7: kkm.proto.NomenclatureResponse.Item.taxes:type_name -> kkm.proto.NomenclatureResponse.Tax
	8,  // 8: kkm.proto.NomenclatureResponse.Element.type:type_name -> kkm.proto.ElementTypeEnum
	4,  // 9: kkm.proto.NomenclatureResponse.Element.item:type_name -> kkm.proto.NomenclatureResponse.Item
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_nomenclature_proto_init() }
func file_nomenclature_proto_init() {
	if File_nomenclature_proto != nil {
		return
	}
	file_common_proto_init()
	file_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nomenclature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NomenclatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nomenclature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NomenclatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nomenclature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NomenclatureResponse_Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nomenclature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NomenclatureResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nomenclature_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NomenclatureResponse_Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nomenclature_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nomenclature_proto_goTypes,
		DependencyIndexes: file_nomenclature_proto_depIdxs,
		EnumInfos:         file_nomenclature_proto_enumTypes,
		MessageInfos:      file_nomenclature_proto_msgTypes,
	}.Build()
	File_nomenclature_proto = out.File
	file_nomenclature_proto_rawDesc = nil
	file_nomenclature_proto_goTypes = nil
	file_nomenclature_proto_depIdxs = nil
}
